<?xml version="1.0" encoding="utf-8" ?>
<ValidItems>
	<Valid>System.Array</Valid>
	<Valid>System.Array.Clear(System.Array,System.Int32,System.Int32)</Valid>
	<Valid>System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)</Valid>
	<Valid>System.Array.Copy(System.Array,System.Array,System.Int32)</Valid>
	<Valid>System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)</Valid>
	<Valid>System.Array.CopyTo(System.Array,System.Int32)</Valid>
	<Valid>System.Array.GetLength(System.Int32)</Valid>
	<Valid>System.Array.GetLowerBound(System.Int32)</Valid>
	<Valid>System.Array.GetUpperBound(System.Int32)</Valid>
	<Valid>System.Array.GetValue(System.Int32)</Valid>
	<Valid>System.Array.GetValue(System.Int32,System.Int32)</Valid>
	<Valid>System.Array.GetValue(System.Int32,System.Int32,System.Int32)</Valid>
	<Valid>System.Array.GetValue(System.Int32[])</Valid>
	<Valid>System.Array.IndexOf(System.String[],System.String)</Valid>
	<Valid>System.Array.IndexOf(System.String[],System.String,System.Int32)</Valid>
	<Valid>System.Array.IndexOf(System.String[],System.String,System.Int32,System.Int32)</Valid>
	<Valid>System.Array.SetValue(System.Object,System.Int32)</Valid>
	<Valid>System.Array.SetValue(System.Object,System.Int32,System.Int32)</Valid>
	<Valid>System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)</Valid>
	<Valid>System.Array.SetValue(System.Object,System.Int32[])</Valid>
	<Valid>System.Array.get_Length()</Valid>
	<Valid>System.Array.get_Rank()</Valid>
	<Valid>System.BitConverter.GetBytes(System.Boolean)</Valid>
	<Valid>System.BitConverter.GetBytes(System.Char)</Valid>
	<Valid>System.BitConverter.GetBytes(System.Double)</Valid>
	<Valid>System.BitConverter.GetBytes(System.Int16)</Valid>
	<Valid>System.BitConverter.GetBytes(System.Int32)</Valid>
	<Valid>System.BitConverter.GetBytes(System.Int64)</Valid>
	<Valid>System.BitConverter.GetBytes(System.Single)</Valid>
	<Valid>System.BitConverter.GetBytes(System.UInt16)</Valid>
	<Valid>System.BitConverter.GetBytes(System.UInt32)</Valid>
	<Valid>System.BitConverter.GetBytes(System.UInt64)</Valid>
	<Valid>System.BitConverter.ToBoolean(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToChar(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToDouble(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToInt16(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToInt32(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToInt64(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToSingle(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToString(System.Byte[])</Valid>
	<Valid>System.BitConverter.ToString(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)</Valid>
	<Valid>System.BitConverter.ToUInt16(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToUInt32(System.Byte[],System.Int32)</Valid>
	<Valid>System.BitConverter.ToUInt64(System.Byte[],System.Int32)</Valid>	<Valid>System.Boolean</Valid>
	<Valid>System.Boolean[,,]</Valid>
	<Valid>System.Boolean[,]</Valid>
	<Valid>System.Boolean[]</Valid>
	<Valid>System.Boolean.CompareTo(System.Boolean)</Valid>
	<Valid>System.Boolean.CompareTo(System.Object)</Valid>
	<Valid>System.Boolean.Equals(System.Boolean)</Valid>
	<Valid>System.Boolean.Equals(System.Object)</Valid>
	<Valid>System.Boolean.Parse(System.String)</Valid>
	<Valid>System.Boolean.ToString()</Valid>
	<Valid>System.Buffer</Valid>
	<Valid>System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)</Valid>
	<Valid>System.Buffer.ByteLength(System.Array)</Valid>
	<Valid>System.Buffer.GetByte(System.Array,System.Int32)</Valid>
	<Valid>System.Buffer.SetByte(System.Array,System.Int32,System.Byte)</Valid>
	<Valid>System.Byte</Valid>
	<Valid>System.Byte[,,]</Valid>
	<Valid>System.Byte[,]</Valid>
	<Valid>System.Byte[]</Valid>
	<Valid>System.Byte.CompareTo(System.Byte)</Valid>
	<Valid>System.Byte.CompareTo(System.Object)</Valid>
	<Valid>System.Byte.Equals(System.Byte)</Valid>
	<Valid>System.Byte.Equals(System.Object)</Valid>
	<Valid>System.Byte.Parse(System.String)</Valid>
	<Valid>System.Byte.ToString()</Valid>
	<Valid>System.Byte.TryParse(System.String,System.Byte)</Valid>
	<Valid>System.Char</Valid>
	<Valid>System.Char[,,]</Valid>
	<Valid>System.Char[,]</Valid>
	<Valid>System.Char[]</Valid>
	<Valid>System.Char.CompareTo(System.Char)</Valid>
	<Valid>System.Char.CompareTo(System.Object)</Valid>
	<Valid>System.Char.Equals(System.Char)</Valid>
	<Valid>System.Char.Equals(System.Object)</Valid>
	<Valid>System.Char.GetNumericValue(System.Char)</Valid>
	<Valid>System.Char.GetNumericValue(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsControl(System.Char)</Valid>
	<Valid>System.Char.IsControl(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsDigit(System.Char)</Valid>
	<Valid>System.Char.IsDigit(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsLetter(System.Char)</Valid>
	<Valid>System.Char.IsLetter(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsLetterOrDigit(System.Char)</Valid>
	<Valid>System.Char.IsLetterOrDigit(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsLower(System.Char)</Valid>
	<Valid>System.Char.IsLower(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsNumber(System.Char)</Valid>
	<Valid>System.Char.IsNumber(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsPunctuation(System.Char)</Valid>
	<Valid>System.Char.IsPunctuation(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsSeparator(System.Char)</Valid>
	<Valid>System.Char.IsSeparator(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsUpper(System.Char)</Valid>
	<Valid>System.Char.IsUpper(System.String,System.Int32)</Valid>
	<Valid>System.Char.IsWhiteSpace(System.Char)</Valid>
	<Valid>System.Char.IsWhiteSpace(System.String,System.Int32)</Valid>
	<Valid>System.Char.Parse(System.String)</Valid>
	<Valid>System.Char.ToLower(System.Char)</Valid>
	<Valid>System.Char.ToString()</Valid>
	<Valid>System.Char.ToString(System.Char)</Valid>
	<Valid>System.Char.ToUpper(System.Char)</Valid>
	<Valid>System.Char.TryParse(System.String,System.Char)</Valid>
	<Valid>System.CharEnumerator</Valid>
	<Valid>System.CharEnumerator..ctor(System.String)</Valid>
	<Valid>System.CharEnumerator.MoveNext()</Valid>
	<Valid>System.CharEnumerator.Reset()</Valid>
	<Valid>System.CharEnumerator.get_Current()</Valid>
	<Valid>System.DateTime</Valid>
	<Valid>System.DateTime[,,]</Valid>
	<Valid>System.DateTime[,]</Valid>
	<Valid>System.DateTime[]</Valid>
	<Valid>System.DateTime.Add(System.TimeSpan)</Valid>
	<Valid>System.DateTime.AddDays(System.Double)</Valid>
	<Valid>System.DateTime.AddHours(System.Double)</Valid>
	<Valid>System.DateTime.AddMilliseconds(System.Double)</Valid>
	<Valid>System.DateTime.AddMinutes(System.Double)</Valid>
	<Valid>System.DateTime.AddMonths(System.Int32)</Valid>
	<Valid>System.DateTime.AddSeconds(System.Double)</Valid>
	<Valid>System.DateTime.AddTicks(System.Int64)</Valid>
	<Valid>System.DateTime.AddYears(System.Int32)</Valid>
	<Valid>System.DateTime.Compare(System.DateTime,System.DateTime)</Valid>
	<Valid>System.DateTime.CompareTo(System.DateTime)</Valid>
	<Valid>System.DateTime.CompareTo(System.Object)</Valid>
	<Valid>System.DateTime.DaysInMonth(System.Int32,System.Int32)</Valid>
	<Valid>System.DateTime.Equals(System.DateTime)</Valid>
	<Valid>System.DateTime.Equals(System.DateTime,System.DateTime)</Valid>
	<Valid>System.DateTime.Equals(System.Object)</Valid>
	<Valid>System.DateTime.IsDaylightSavingTime()</Valid>
	<Valid>System.DateTime.IsLeapYear(System.Int32)</Valid>
	<Valid>System.DateTime.Subtract(System.DateTime)</Valid>
	<Valid>System.DateTime.Subtract(System.TimeSpan)</Valid>
	<Valid>System.DateTime.ToLocalTime()</Valid>
	<Valid>System.DateTime.ToString()</Valid>
	<Valid>System.DateTime.ToUniversalTime()</Valid>
	<Valid>System.DateTime.get_Date()</Valid>
	<Valid>System.DateTime.get_Day()</Valid>
	<Valid>System.DateTime.get_DayOfWeek()</Valid>
	<Valid>System.DateTime.get_DayOfYear()</Valid>
	<Valid>System.DateTime.get_Hour()</Valid>
	<Valid>System.DateTime.get_Millisecond()</Valid>
	<Valid>System.DateTime.get_Minute()</Valid>
	<Valid>System.DateTime.get_Month()</Valid>
	<Valid>System.DateTime.get_Now()</Valid>
	<Valid>System.DateTime.get_Second()</Valid>
	<Valid>System.DateTime.get_Ticks()</Valid>
	<Valid>System.DateTime.get_TimeOfDay()</Valid>
	<Valid>System.DateTime.get_Today()</Valid>
	<Valid>System.DateTime.get_UtcNow()</Valid>
	<Valid>System.DateTime.get_Year()</Valid>
	<Valid>System.DateTime.op_Addition(System.DateTime,System.TimeSpan)</Valid>
	<Valid>System.DateTime.op_Equality(System.DateTime,System.DateTime)</Valid>
	<Valid>System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)</Valid>
	<Valid>System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)</Valid>
	<Valid>System.DateTime.op_Inequality(System.DateTime,System.DateTime)</Valid>
	<Valid>System.DateTime.op_LessThan(System.DateTime,System.DateTime)</Valid>
	<Valid>System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)</Valid>
	<Valid>System.DateTime.op_Subtraction(System.DateTime,System.DateTime)</Valid>
	<Valid>System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)</Valid>
	<Valid>System.Double</Valid>
	<Valid>System.Double[,,]</Valid>
	<Valid>System.Double[,]</Valid>
	<Valid>System.Double[]</Valid>
	<Valid>System.Double.CompareTo(System.Double)</Valid>
	<Valid>System.Double.CompareTo(System.Object)</Valid>
	<Valid>System.Double.Equals(System.Double)</Valid>
	<Valid>System.Double.Equals(System.Object)</Valid>
	<Valid>System.Double.IsFinite(System.Double)</Valid>
	<Valid>System.Double.IsInfinity(System.Double)</Valid>
	<Valid>System.Double.IsNaN(System.Double)</Valid>
	<Valid>System.Double.IsNegative(System.Double)</Valid>
	<Valid>System.Double.IsNegativeInfinity(System.Double)</Valid>
	<Valid>System.Double.IsNormal(System.Double)</Valid>
	<Valid>System.Double.IsPositiveInfinity(System.Double)</Valid>
	<Valid>System.Double.IsSubnormal(System.Double)</Valid>
	<Valid>System.Double.Parse(System.String)</Valid>
	<Valid>System.Double.ToString()</Valid>
	<Valid>System.Double.TryParse(System.String,System.Double)</Valid>
	<Valid>System.Int16</Valid>
	<Valid>System.Int16[,,]</Valid>
	<Valid>System.Int16[,]</Valid>
	<Valid>System.Int16[]</Valid>
	<Valid>System.Int16.CompareTo(System.Int16)</Valid>
	<Valid>System.Int16.CompareTo(System.Object)</Valid>
	<Valid>System.Int16.Equals(System.Int16)</Valid>
	<Valid>System.Int16.Equals(System.Object)</Valid>
	<Valid>System.Int16.Parse(System.String)</Valid>
	<Valid>System.Int16.ToString()</Valid>
	<Valid>System.Int16.TryParse(System.String,System.Int16)</Valid>
	<Valid>System.Int32</Valid>
	<Valid>System.Int32[,,]</Valid>
	<Valid>System.Int32[,]</Valid>
	<Valid>System.Int32[]</Valid>
	<Valid>System.Int32.CompareTo(System.Int32)</Valid>
	<Valid>System.Int32.CompareTo(System.Object)</Valid>
	<Valid>System.Int32.Equals(System.Int32)</Valid>
	<Valid>System.Int32.Equals(System.Object)</Valid>
	<Valid>System.Int32.Parse(System.String)</Valid>
	<Valid>System.Int32.ToString()</Valid>
	<Valid>System.Int32.TryParse(System.String,System.Int32)</Valid>
	<Valid>System.Int64</Valid>
	<Valid>System.Int64[,,]</Valid>
	<Valid>System.Int64[,]</Valid>
	<Valid>System.Int64[]</Valid>
	<Valid>System.Int64.CompareTo(System.Int64)</Valid>
	<Valid>System.Int64.CompareTo(System.Object)</Valid>
	<Valid>System.Int64.Equals(System.Int64)</Valid>
	<Valid>System.Int64.Equals(System.Object)</Valid>
	<Valid>System.Int64.Parse(System.String)</Valid>
	<Valid>System.Int64.ToString()</Valid>
	<Valid>System.Int64.TryParse(System.String,System.Int64)</Valid>
	<Valid>System.Math</Valid>
	<Valid>System.Math.Abs(System.Double)</Valid>
	<Valid>System.Math.Abs(System.Int16)</Valid>
	<Valid>System.Math.Abs(System.Int32)</Valid>
	<Valid>System.Math.Abs(System.Int64)</Valid>
	<Valid>System.Math.Abs(System.SByte)</Valid>
	<Valid>System.Math.Abs(System.Single)</Valid>
	<Valid>System.Math.Acos(System.Double)</Valid>
	<Valid>System.Math.Acosh(System.Double)</Valid>
	<Valid>System.Math.Asin(System.Double)</Valid>
	<Valid>System.Math.Asinh(System.Double)</Valid>
	<Valid>System.Math.Atan(System.Double)</Valid>
	<Valid>System.Math.Atan2(System.Double,System.Double)</Valid>
	<Valid>System.Math.Atanh(System.Double)</Valid>
	<Valid>System.Math.BigMul(System.Int32,System.Int32)</Valid>
	<Valid>System.Math.BitDecrement(System.Double)</Valid>
	<Valid>System.Math.BitIncrement(System.Double)</Valid>
	<Valid>System.Math.Cbrt(System.Double)</Valid>
	<Valid>System.Math.Ceiling(System.Double)</Valid>
	<Valid>System.Math.Clamp(System.Byte,System.Byte,System.Byte)</Valid>
	<Valid>System.Math.Clamp(System.Double,System.Double,System.Double)</Valid>
	<Valid>System.Math.Clamp(System.Int16,System.Int16,System.Int16)</Valid>
	<Valid>System.Math.Clamp(System.Int32,System.Int32,System.Int32)</Valid>
	<Valid>System.Math.Clamp(System.Int64,System.Int64,System.Int64)</Valid>
	<Valid>System.Math.Clamp(System.SByte,System.SByte,System.SByte)</Valid>
	<Valid>System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)</Valid>
	<Valid>System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)</Valid>
	<Valid>System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)</Valid>
	<Valid>System.Math.CopySign(System.Double,System.Double)</Valid>
	<Valid>System.Math.Cos(System.Double)</Valid>
	<Valid>System.Math.Cosh(System.Double)</Valid>
	<Valid>System.Math.DivRem(System.Int32,System.Int32,System.Int32)</Valid>
	<Valid>System.Math.DivRem(System.Int64,System.Int64,System.Int64)</Valid>
	<Valid>System.Math.Exp(System.Double)</Valid>
	<Valid>System.Math.Floor(System.Double)</Valid>
	<Valid>System.Math.FusedMultiplyAdd(System.Double,System.Double,System.Double)</Valid>
	<Valid>System.Math.IEEERemainder(System.Double,System.Double)</Valid>
	<Valid>System.Math.ILogB(System.Double)</Valid>
	<Valid>System.Math.Log(System.Double)</Valid>
	<Valid>System.Math.Log(System.Double,System.Double)</Valid>
	<Valid>System.Math.Log10(System.Double)</Valid>
	<Valid>System.Math.Max(System.Byte,System.Byte)</Valid>
	<Valid>System.Math.Max(System.Double,System.Double)</Valid>
	<Valid>System.Math.Max(System.Int16,System.Int16)</Valid>
	<Valid>System.Math.Max(System.Int32,System.Int32)</Valid>
	<Valid>System.Math.Max(System.Int64,System.Int64)</Valid>
	<Valid>System.Math.Max(System.SByte,System.SByte)</Valid>
	<Valid>System.Math.Max(System.Single,System.Single)</Valid>
	<Valid>System.Math.Max(System.UInt16,System.UInt16)</Valid>
	<Valid>System.Math.Max(System.UInt32,System.UInt32)</Valid>
	<Valid>System.Math.Max(System.UInt64,System.UInt64)</Valid>
	<Valid>System.Math.MaxMagnitude(System.Double,System.Double)</Valid>
	<Valid>System.Math.Min(System.Byte,System.Byte)</Valid>
	<Valid>System.Math.Min(System.Double,System.Double)</Valid>
	<Valid>System.Math.Min(System.Int16,System.Int16)</Valid>
	<Valid>System.Math.Min(System.Int32,System.Int32)</Valid>
	<Valid>System.Math.Min(System.Int64,System.Int64)</Valid>
	<Valid>System.Math.Min(System.SByte,System.SByte)</Valid>
	<Valid>System.Math.Min(System.Single,System.Single)</Valid>
	<Valid>System.Math.Min(System.UInt16,System.UInt16)</Valid>
	<Valid>System.Math.Min(System.UInt32,System.UInt32)</Valid>
	<Valid>System.Math.Min(System.UInt64,System.UInt64)</Valid>
	<Valid>System.Math.MinMagnitude(System.Double,System.Double)</Valid>
	<Valid>System.Math.Pow(System.Double,System.Double)</Valid>
	<Valid>System.Math.Round(System.Double)</Valid>
	<Valid>System.Math.Round(System.Double,System.Int32)</Valid>
	<Valid>System.Math.Round(System.Double,System.Int32,System.MidpointRounding)</Valid>
	<Valid>System.Math.ScaleB(System.Double,System.Int32)</Valid>
	<Valid>System.Math.Sign(System.Double)</Valid>
	<Valid>System.Math.Sign(System.Int16)</Valid>
	<Valid>System.Math.Sign(System.Int32)</Valid>
	<Valid>System.Math.Sign(System.Int64)</Valid>
	<Valid>System.Math.Sign(System.SByte)</Valid>
	<Valid>System.Math.Sign(System.Single)</Valid>
	<Valid>System.Math.Sin(System.Double)</Valid>
	<Valid>System.Math.Sinh(System.Double)</Valid>
	<Valid>System.Math.Sqrt(System.Double)</Valid>
	<Valid>System.Math.Tan(System.Double)</Valid>
	<Valid>System.Math.Tanh(System.Double)</Valid>
	<Valid>System.Math.Truncate(System.Double)</Valid>
	<Valid>System.Object</Valid>
	<Valid>System.Object[,,]</Valid>
	<Valid>System.Object[,]</Valid>
	<Valid>System.Object[]</Valid>
	<Valid>System.Object..ctor()</Valid>
	<Valid>System.Object.Equals(System.Object)</Valid>
	<Valid>System.Object.Equals(System.Object,System.Object)</Valid>
	<Valid>System.Object.ToString()</Valid>
	<Valid>System.SByte</Valid>
	<Valid>System.SByte[,,]</Valid>
	<Valid>System.SByte[,]</Valid>
	<Valid>System.SByte[]</Valid>
	<Valid>System.SByte.CompareTo(System.Object)</Valid>
	<Valid>System.SByte.CompareTo(System.SByte)</Valid>
	<Valid>System.SByte.Equals(System.Object)</Valid>
	<Valid>System.SByte.Equals(System.SByte)</Valid>
	<Valid>System.SByte.Parse(System.String)</Valid>
	<Valid>System.SByte.ToString()</Valid>
	<Valid>System.SByte.TryParse(System.String,System.SByte)</Valid>
	<Valid>System.Single</Valid>
	<Valid>System.Single[,,]</Valid>
	<Valid>System.Single[,]</Valid>
	<Valid>System.Single[]</Valid>
	<Valid>System.Single.CompareTo(System.Object)</Valid>
	<Valid>System.Single.CompareTo(System.Single)</Valid>
	<Valid>System.Single.Equals(System.Object)</Valid>
	<Valid>System.Single.Equals(System.Single)</Valid>
	<Valid>System.Single.IsFinite(System.Single)</Valid>
	<Valid>System.Single.IsInfinity(System.Single)</Valid>
	<Valid>System.Single.IsNaN(System.Single)</Valid>
	<Valid>System.Single.IsNegative(System.Single)</Valid>
	<Valid>System.Single.IsNegativeInfinity(System.Single)</Valid>
	<Valid>System.Single.IsNormal(System.Single)</Valid>
	<Valid>System.Single.IsPositiveInfinity(System.Single)</Valid>
	<Valid>System.Single.IsSubnormal(System.Single)</Valid>
	<Valid>System.Single.Parse(System.String)</Valid>
	<Valid>System.Single.ToString()</Valid>
	<Valid>System.Single.TryParse(System.String,System.Single)</Valid>
	<Valid>System.String</Valid>
	<Valid>System.String[,,]</Valid>
	<Valid>System.String[,]</Valid>
	<Valid>System.String[]</Valid>
	<Valid>System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)</Valid>
	<Valid>System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)</Valid>
	<Valid>System.String.Compare(System.String,System.String)</Valid>
	<Valid>System.String.Compare(System.String,System.String,System.Boolean)</Valid>
	<Valid>System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)</Valid>
	<Valid>System.String.CompareOrdinal(System.String,System.String)</Valid>
	<Valid>System.String.CompareTo(System.Object)</Valid>
	<Valid>System.String.CompareTo(System.String)</Valid>
	<Valid>System.String.Concat(System.Object,System.Object)</Valid>
	<Valid>System.String.Concat(System.Object,System.Object,System.Object)</Valid>
	<Valid>System.String.Concat(System.Object,System.Object,System.Object,System.Object)</Valid>
	<Valid>System.String.Concat(System.Object,System.Object,System.Object,System.Object,System.Object)</Valid>
	<Valid>System.String.Concat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)</Valid>
	<Valid>System.String.Concat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)</Valid>
	<Valid>System.String.Concat(System.Object[])</Valid>
	<Valid>System.String.Concat(System.String,System.String)</Valid>
	<Valid>System.String.Concat(System.String,System.String,System.String)</Valid>
	<Valid>System.String.Concat(System.String,System.String,System.String,System.String)</Valid>
	<Valid>System.String.Concat(System.String,System.String,System.String,System.String,System.String)</Valid>
	<Valid>System.String.Concat(System.String,System.String,System.String,System.String,System.String,System.String)</Valid>
	<Valid>System.String.Concat(System.String,System.String,System.String,System.String,System.String,System.String,System.String)</Valid>
	<Valid>System.String.Concat(System.String[])</Valid>
	<Valid>System.String.Contains(System.String)</Valid>
	<Valid>System.String.Copy(System.String)</Valid>
	<Valid>System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)</Valid>
	<Valid>System.String.EndsWith(System.Char)</Valid>
	<Valid>System.String.EndsWith(System.String)</Valid>
	<Valid>System.String.Equals(System.String)</Valid>
	<Valid>System.String.Equals(System.String,System.String)</Valid>
	<Valid>System.String.GetEnumerator()</Valid>
	<Valid>System.String.IndexOf(System.Char)</Valid>
	<Valid>System.String.IndexOf(System.Char,System.Int32)</Valid>
	<Valid>System.String.IndexOf(System.Char,System.Int32,System.Int32)</Valid>
	<Valid>System.String.IndexOf(System.String)</Valid>
	<Valid>System.String.IndexOf(System.String,System.Int32)</Valid>
	<Valid>System.String.IndexOf(System.String,System.Int32,System.Int32)</Valid>
	<Valid>System.String.IndexOfAny(System.Char[])</Valid>
	<Valid>System.String.IndexOfAny(System.Char[],System.Int32)</Valid>
	<Valid>System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)</Valid>
	<Valid>System.String.Insert(System.Int32,System.String)</Valid>
	<Valid>System.String.IsNullOrEmpty(System.String)</Valid>
	<Valid>System.String.IsNullOrWhiteSpace(System.String)</Valid>
	<Valid>System.String.Join(System.Char,System.Object[])</Valid>
	<Valid>System.String.Join(System.Char,System.String[])</Valid>
	<Valid>System.String.Join(System.Char,System.String[],System.Int32,System.Int32)</Valid>
	<Valid>System.String.Join(System.String,System.Object[])</Valid>
	<Valid>System.String.Join(System.String,System.String[])</Valid>
	<Valid>System.String.Join(System.String,System.String[],System.Int32,System.Int32)</Valid>
	<Valid>System.String.LastIndexOf(System.Char)</Valid>
	<Valid>System.String.LastIndexOf(System.Char,System.Int32)</Valid>
	<Valid>System.String.LastIndexOf(System.Char,System.Int32,System.Int32)</Valid>
	<Valid>System.String.LastIndexOf(System.String)</Valid>
	<Valid>System.String.LastIndexOf(System.String,System.Int32)</Valid>
	<Valid>System.String.LastIndexOf(System.String,System.Int32,System.Int32)</Valid>
	<Valid>System.String.LastIndexOfAny(System.Char[])</Valid>
	<Valid>System.String.LastIndexOfAny(System.Char[],System.Int32)</Valid>
	<Valid>System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)</Valid>
	<Valid>System.String.PadLeft(System.Int32)</Valid>
	<Valid>System.String.PadLeft(System.Int32,System.Char)</Valid>
	<Valid>System.String.PadRight(System.Int32)</Valid>
	<Valid>System.String.PadRight(System.Int32,System.Char)</Valid>
	<Valid>System.String.Remove(System.Int32)</Valid>
	<Valid>System.String.Remove(System.Int32,System.Int32)</Valid>
	<Valid>System.String.Replace(System.Char,System.Char)</Valid>
	<Valid>System.String.Replace(System.String,System.String)</Valid>
	<Valid>System.String.StartsWith(System.String)</Valid>
	<Valid>System.String.Substring(System.Int32)</Valid>
	<Valid>System.String.Substring(System.Int32,System.Int32)</Valid>
	<Valid>System.String.ToCharArray()</Valid>
	<Valid>System.String.ToCharArray(System.Int32,System.Int32)</Valid>
	<Valid>System.String.ToLower()</Valid>
	<Valid>System.String.ToLowerInvariant()</Valid>
	<Valid>System.String.ToString()</Valid>
	<Valid>System.String.ToUpper()</Valid>
	<Valid>System.String.ToUpperInvariant()</Valid>
	<Valid>System.String.Trim()</Valid>
	<Valid>System.String.Trim(System.Char[])</Valid>
	<Valid>System.String.TrimEnd(System.Char[])</Valid>
	<Valid>System.String.TrimStart(System.Char[])</Valid>
	<Valid>System.String.get_Chars(System.Int32)</Valid>
	<Valid>System.String.get_Length()</Valid>
	<Valid>System.String.op_Equality(System.String,System.String)</Valid>
	<Valid>System.String.op_Implicit(System.String)</Valid>
	<Valid>System.String.op_Inequality(System.String,System.String)</Valid>
	<Valid>System.Text.StringBuilder</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Boolean)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Byte)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Char)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Char,System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Char[])</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Double)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Int16)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Int64)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Object)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.SByte)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.Single)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.String)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.UInt16)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.UInt32)</Valid>
	<Valid>System.Text.StringBuilder.Append(System.UInt64)</Valid>
	<Valid>System.Text.StringBuilder.AppendLine()</Valid>
	<Valid>System.Text.StringBuilder.AppendLine(System.String)</Valid>
	<Valid>System.Text.StringBuilder.Clear()</Valid>
	<Valid>System.Text.StringBuilder.EnsureCapacity(System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.Equals(System.Text.StringBuilder)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Boolean)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Byte)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Char)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Char[])</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Double)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Int16)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Int64)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Object)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.SByte)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.Single)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.UInt16)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.UInt32)</Valid>
	<Valid>System.Text.StringBuilder.Insert(System.Int32,System.UInt64)</Valid>
	<Valid>System.Text.StringBuilder.Replace(System.Char,System.Char)</Valid>
	<Valid>System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.Replace(System.String,System.String)</Valid>
	<Valid>System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.ToString()</Valid>
	<Valid>System.Text.StringBuilder.ToString(System.Int32,System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.get_Capacity()</Valid>
	<Valid>System.Text.StringBuilder.get_Chars(System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.get_Length()</Valid>
	<Valid>System.Text.StringBuilder.get_MaxCapacity()</Valid>
	<Valid>System.Text.StringBuilder.set_Capacity(System.Int32)</Valid>
	<Valid>System.Text.StringBuilder.set_Chars(System.Int32,System.Char)</Valid>
	<Valid>System.Text.StringBuilder.set_Length(System.Int32)</Valid>
	<Valid>System.TimeSpan</Valid>
	<Valid>System.TimeSpan[,,]</Valid>
	<Valid>System.TimeSpan[,]</Valid>
	<Valid>System.TimeSpan[]</Valid>
	<Valid>System.TimeSpan.Add(System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.CompareTo(System.Object)</Valid>
	<Valid>System.TimeSpan.CompareTo(System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.Divide(System.Double)</Valid>
	<Valid>System.TimeSpan.Divide(System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.Duration()</Valid>
	<Valid>System.TimeSpan.Equals(System.Object)</Valid>
	<Valid>System.TimeSpan.Equals(System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.FromDays(System.Double)</Valid>
	<Valid>System.TimeSpan.FromHours(System.Double)</Valid>
	<Valid>System.TimeSpan.FromMilliseconds(System.Double)</Valid>
	<Valid>System.TimeSpan.FromMinutes(System.Double)</Valid>
	<Valid>System.TimeSpan.FromSeconds(System.Double)</Valid>
	<Valid>System.TimeSpan.FromTicks(System.Int64)</Valid>
	<Valid>System.TimeSpan.Multiply(System.Double)</Valid>
	<Valid>System.TimeSpan.Negate()</Valid>
	<Valid>System.TimeSpan.Parse(System.String)</Valid>
	<Valid>System.TimeSpan.Subtract(System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.ToString()</Valid>
	<Valid>System.TimeSpan.TryParse(System.String,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.get_Days()</Valid>
	<Valid>System.TimeSpan.get_Hours()</Valid>
	<Valid>System.TimeSpan.get_Milliseconds()</Valid>
	<Valid>System.TimeSpan.get_Minutes()</Valid>
	<Valid>System.TimeSpan.get_Seconds()</Valid>
	<Valid>System.TimeSpan.get_Ticks()</Valid>
	<Valid>System.TimeSpan.get_TotalDays()</Valid>
	<Valid>System.TimeSpan.get_TotalHours()</Valid>
	<Valid>System.TimeSpan.get_TotalMilliseconds()</Valid>
	<Valid>System.TimeSpan.get_TotalMinutes()</Valid>
	<Valid>System.TimeSpan.get_TotalSeconds()</Valid>
	<Valid>System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_Division(System.TimeSpan,System.Double)</Valid>
	<Valid>System.TimeSpan.op_Division(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_Multiply(System.Double,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_Multiply(System.TimeSpan,System.Double)</Valid>
	<Valid>System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_UnaryNegation(System.TimeSpan)</Valid>
	<Valid>System.TimeSpan.op_UnaryPlus(System.TimeSpan)</Valid>
	<Valid>System.UInt16</Valid>
	<Valid>System.UInt16[,,]</Valid>
	<Valid>System.UInt16[,]</Valid>
	<Valid>System.UInt16[]</Valid>
	<Valid>System.UInt16.CompareTo(System.Object)</Valid>
	<Valid>System.UInt16.CompareTo(System.UInt16)</Valid>
	<Valid>System.UInt16.Equals(System.Object)</Valid>
	<Valid>System.UInt16.Equals(System.UInt16)</Valid>
	<Valid>System.UInt16.Parse(System.String)</Valid>
	<Valid>System.UInt16.ToString()</Valid>
	<Valid>System.UInt16.TryParse(System.String,System.UInt16)</Valid>
	<Valid>System.UInt32</Valid>
	<Valid>System.UInt32[,,]</Valid>
	<Valid>System.UInt32[,]</Valid>
	<Valid>System.UInt32[]</Valid>
	<Valid>System.UInt32.CompareTo(System.Object)</Valid>
	<Valid>System.UInt32.CompareTo(System.UInt32)</Valid>
	<Valid>System.UInt32.Equals(System.Object)</Valid>
	<Valid>System.UInt32.Equals(System.UInt32)</Valid>
	<Valid>System.UInt32.Parse(System.String)</Valid>
	<Valid>System.UInt32.ToString()</Valid>
	<Valid>System.UInt32.TryParse(System.String,System.UInt32)</Valid>
	<Valid>System.UInt64</Valid>
	<Valid>System.UInt64[,,]</Valid>
	<Valid>System.UInt64[,]</Valid>
	<Valid>System.UInt64[]</Valid>
	<Valid>System.UInt64.CompareTo(System.Object)</Valid>
	<Valid>System.UInt64.CompareTo(System.UInt64)</Valid>
	<Valid>System.UInt64.Equals(System.Object)</Valid>
	<Valid>System.UInt64.Equals(System.UInt64)</Valid>
	<Valid>System.UInt64.Parse(System.String)</Valid>
	<Valid>System.UInt64.ToString()</Valid>
	<Valid>System.UInt64.TryParse(System.String,System.UInt64)</Valid>
	<Valid>System.ArgumentException</Valid>
	<Valid>System.ArgumentNullException</Valid>
	<Valid>System.ArgumentOutOfRangeException</Valid>
	<Valid>System.ArithmeticException</Valid>
	<Valid>System.DivideByZeroException</Valid>
	<Valid>System.Exception</Valid>
	<Valid>System.FormatException</Valid>
	<Valid>System.IndexOutOfRangeException</Valid>
	<Valid>System.InvalidCastException</Valid>
	<Valid>System.InvalidOperationException</Valid>
	<Valid>System.MidpointRounding</Valid>
	<Valid>System.OverflowException</Valid>
	<Valid>System.RankException</Valid>
	<Valid>System.ThrowMinMaxException</Valid>
	<Valid>System.Void</Valid>
</ValidItems>
